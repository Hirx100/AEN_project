<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="userDataButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABDlJREFUeF7tmkeoZEUYRp+Yc06YMI1hISKKCKIYMKCCMurMwjAomDEj4saECVFx
        YwDFgLgRnVFBRTGACzGAOQfMGFDBLJjOafzwOgx4u7vem6qhDxyG+093dVXde+tV1V9TEyZMmDDDrIr7
        4jl4Pd6J9+AteD7ujkvjEseeeD/+in/9jx/iMbgUNs/6+CAuqqF/4rf4Bf7wT6zrq7gJNstW+AmmQd79
        u3Au+n8LP+ob4PH4GXY74in0CWqKNfADTCPuQJ+GPmyNC78qPi3nYTPciqn8WQaGZB3cH2/DPzBlHYXV
        MwtTaTtiXPbGX9DyvsHVsGquRCv7M65noAAnY56CUw3UzBtoRe8eXJVhGfwSLfcRA7WyJuZOHWegII4H
        lvsdVjtH2BnTAbsaKMjZmLLt6Co5GFPJLQwU5GhM2ZsbqJHDMZXczEBB/BOYskt3bjEOxVRyWwMFOQVT
        9oYGamQfTCX3MFCQy9BynRUua6BGtsN0wLEGCuKy2XI/HlxVykqYDrjKQEHeQ8t9dHBVManoY4OrMrhS
        TMdeYaBm7kMr+j2W2t1xgyQdcJCBmnGQSmWdGJUg77/uZKBWNsJ0gPsBO2AJLseU65S4WmZj7pQbnCV5
        AC333cFVpXQ7wHV8SR5Gy31ncFUpzv7SAWcYKISrv8/RcucbqBUr+hZaUfcFDkS3t8bBQc/9wHTsPKya
        OZjK6rg7OOYJUtbbuDxWz6WYSl9rYERWxN8xZW2DzfAjWukXBlej4UCaxp9goCVcC6Ty7vWPwk3o991l
        djrcFN2/CDZkWNbGpMxMrzXJvWgDfI+HnRbfjOnA5lJjoZvmcnG0H/bBdHkab1a5aS7BNOY0Az14GfOd
        are/+mImOI053UAPXkM/795C82yJ6YC+0+PX0c8/PrhqHJOl6YC+r4CHI/y8ZwOaZ0dMB/RNlz2Lft5/
        m8f3Ph1wmIEePIT5zsoGWsWVnDl9G+LU2MlNH1xApQMWoGuCpvA43EX4G6YhJ2FfTHw8h/num3gAVn9y
        zBH/ajSFncrrBTgs62LGgujCyoRLVU/EcngEmgfoVlbdHNkLR8WyL8YckYker/Og5fa42HCn50L0nF+3
        cvoKeqdK5fA2xutwUecJn8RDcMZej1XQDY+s92POAZoUna7KOLZ4XuhF7P62GjM5O624QfERdn/4ffT0
        xlo4U9jBu+Dt2B1o1fPHq2NxPO/Xzfq46XkkLu7DzW6UXIPdw5XuHRY9RHEupnB/yNPentyqCRv8BKae
        n+KmODae2EyhX2GpfN904NPoJmzq+zyONRCvgHnnf0Ln9bXj+NDdTfJpHZkTMQWdaaARnCjlsPbXOHIu
        4Rm0EB/9JhISHdxGz83ruwj7Dx5Kzqh/o4HG8DBlDm3fYGBYdsP0oLoqa83U/Wkcmm6qu3UdD4bGSY6J
        ySXBl3DChAkTJvzL1NTfyNzkCuKZ+1oAAAAASUVORK5CYII=
</value>
  </data>
</root>